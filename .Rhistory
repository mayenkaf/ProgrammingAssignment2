install.packages("swirl")
library("swirl")
swirl()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
bye()
exit()
str(ls)
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555)
c(z,555,z)
z*2 + 100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4) + c(0,10,,100)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("C:/Users/MAYENKA/Documents/testdir")
setwd("testdir")
getwd()
info(9
)
info()
setwd(old.dir)
setwd("testdir")
file.create("mytest.R")
list.files
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
?dir.create
dir.create(file.path('testdir2','testdir3'))
dir.create(file.path('testdir2','testdir3'),recursive=TRUE)
?unlink
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
list.files
list.files()
unlike("testdir",recursive=TRUE)
unlink("testdir",recursive=TRUE)
save.image("C:\\Users\\MAYENKA\\Documents\\R Programming\\swirl-R-Programming-lesson-1-2.RData")
q()
setwd("C:\Users\MAYENKA\Documents\GitHub\ProgrammingAssignment2")
setwd("C:/Users/MAYENKA/Documents/GitHub/ProgrammingAssignment2")
dir()
m<-matrix(rep(1,4),nrow=2,ncol02)
m<-matrix(rep(1,4),nrow=2,ncol=2)
m
solve(m)
m<-matrix(c(1,0,0,1),nrow=2,ncol=2)
m
solve(m)
m<-matrix(c(1,1,4,0,3,1,4,4,0))
solve(m)
m<-matrix(c(1,1,4,0,3,1,4,4,0),nrow=2,ncol=2)
m<-matrix(c(1,1,4,0,3,1,4,4,0),nrow=3,ncol=3)
m
solve(m)
source("cachematrix.R")
ls()
cacheSolve(m)
m
x<-makeCacheMatrix(m)
x
m$get()
x$get()
x$setsolve()
x$getsolve()
x$getsolve(solve=solve)
x<-makeCacheMatrix(m)
x
x$get()
x$
setsolve(m)
x$getsolve()
x$getsolve() m
x$getsolve(m)
a<-x$getsolve(m)
a
dir()
source("cacheMatrix.R")
m
cacheSolve(m)
ls()
a<-makeCacheMatrix(m)
a
cacheSolve(a)
